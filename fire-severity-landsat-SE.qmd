---
title: Fire Severity Analysis
subtitle: Fire Severity Analysis in Guatemala Using Landsat 8/9 Imagery
author: Joel Pimienta
contributors: Conservation Data Lab, Randy Swaty, Sam Ettenborough
date: today
published-title: Last Date Run
toc: true
number-sections: true
highlight-style: pygments
editor: source
warning: false
error: false
message: false
format:
  html:
    theme: flatly
    code-fold: true
    code-tools: false
    embed-resources: true
    df-print: paged
---

## Introduction

Tutorial for calculating and plotting dNBR Fire Severity Index using Landsat 8/9 satellite imagery.

### Data Sources

[USGS Earth Explorer](https://earthexplorer.usgs.gov/)

### Sources Referenced

The code in this analysis was adapted from the following sources below:

[Wildfire Severity Analysis](https://bookdown.org/mcwimberly/gdswr-book/application---wildfire-severity-analysis.html)

[Landsat Remote Sensing tif Files in R](https://www.earthdatascience.org/courses/earth-analytics/multispectral-remote-sensing-data/landsat-data-in-r-geotiff/)

### Additional Contributors

Conservation Data Lab, Randy Swaty, Sam Ettenborough

```{r}
#| label: credits
#| include: false

####################################################################################################################
#
# Tutorial for calculating and plotting dNBR Fire Severity Index using Landsat 8/9 satellite imagery
# Adapted by: E. Joel Pimienta
#
# Contributors: Conservation Data Lab, Randy Swaty, Sam Ettenborough
#
# *This tutorial assumes you have referenced data downloaded and in a known file directory*
#                                  OR
# *You have recently downloaded data from USGS EarthExplorer Data base following tutorial by J. Pimienta*
#
# USGS EarthExplorer Database: https://earthexplorer.usgs.gov/
#
# Adapted from tutorial and book below
# Link to book https://bookdown.org/mcwimberly/gdswr-book/application---wildfire-severity-analysis.html
# Link to tutorial https://www.earthdatascience.org/courses/earth-analytics/multispectral-remote-sensing-data/landsat-data-in-r-geotiff/

###################################################################################################################

```

## Setup

Please review the `README.md` document for installation and setup instructions.

```{r}
#| label: setup
#| include: false

# Load all necessary packages for manipulating raster files, calculating dNBR, and plotting rasters
library(ggplot2)
library(dplyr)
library(terra)
library(ggspatial)
library(sf)
library(reticulate)
library(leaflet)
library(leafem)
library(purrr)
library(stringr)

here::i_am("fire-severity-landsat-SE.qmd")

# load helper functions
# from tutorial
# 'rasterdf.R' was the source code provided in Ch. 11 of Geographic Data Science with R
# necessary to have this source code to complete analysis
# A function will appear in your global environment if this code ran properly ('rasterdf')
source(here::here("utils/rasterdf.R"))
# source_python(here::here("utils/download-landsat-imagery.py"))
source_python(here::here("utils/download-landsat-imagery.py"))


```

## Importing Landsat Files

```{r}
#| output: false

# GEE project title
project <- "ee-samettenborough"

# fire 1 coordinates
fire_1 <- list(-91.253, 16.8194, -89.4018, 18.2112)

# these two fires started end of may and last measurements were in end of july
aoi_03 <- here::here("data/areas-of-interest/EMSR727_AOI03_BLP_PRODUCT_areaOfInterestA_v1.shp")
aoi_05 <- here::here("data/areas-of-interest/EMSR727_AOI05_BLP_PRODUCT_areaOfInterestA_v1.shp")

# pre fire start and end date search window
pre_start_date <- "2024-01-01"
pre_end_date <- "2024-03-01"

# output folder
out_dir <- "data/pre"

# # uncomment this section to re-download the images
# process_aoi(
#     project,
#     pre_start_date,
#     pre_end_date,
#     out_dir,
#     geometry = aoi_05,
#     prefix="aoi_05_landsat_pre_",
# )


# pre fire start and end date search window
post_start_date <- "2024-04-01"
post_end_date <- "2024-08-01"

# output folder
out_dir <- "data/post"

# # uncomment this section to re-download the images
# process_aoi(
#     project,
#     post_start_date,
#     post_end_date,
#     out_dir,
#     geometry = aoi_05,
#     filter_lim = 30,
#     prefix="aoi_05_landsat_post_",
# )

```

## Visualize Pre and Post Images

```{r}

pre_fire_files <- list.files("data/pre/",
                             pattern = "aoi_05.*",
                             full.names = TRUE)

pre_fires <- pre_fire_files |>
  map(rast) |>
  reduce(mosaic)

# Plotting in RGB to test
par(col.axis = 'white', col.lab = 'white', tck = 0)
plotRGB(pre_fires,
        r= 2, g= 1, b= 1,
        stretch = 'lin',
        axes = TRUE,
        main = 'Prefire RGB Composite Image, Bands 5,7')

# # Create leaflet map
# leaflet() %>%
#   addTiles() %>%
#   addRasterImage(
#     pre_fires, 
#     opacity = 0.7,
#     group = "Pre-Fire RGB Composite"
#   )

```
```{r}

post_fire_files <- list.files("data/post",
                              pattern = "aoi_05.*",
                              full.names = TRUE)

post_fires <- post_fire_files |>
  map(rast) |>
  reduce(mosaic)

par(col.axis = 'white', col.lab = 'white', tck = 0)
plotRGB(post_fires,
        r= 2, g= 1, b= 1,
        stretch = 'lin',
        axes = TRUE,
        main = 'Postfire RGB Composite Image, Bands 5,7')

```
## Calculate Normalized Burn Ratio and Burn Severity (dNBR)

```{r}

# Calculating the Delta Normalized Burn Ratio Index 
nbr_pre <- 1000 * (pre_fires[[1]] - pre_fires[[2]]) / 
  (pre_fires[[1]] + pre_fires[[2]])

nbr_post <- 1000 * (post_fires[[1]] - post_fires[[2]]) / 
  (post_fires[[1]] + post_fires[[2]])

# Attempt to calculate the Differenced Normalized Burn Ratio Index
dnbr <- (nbr_pre)-(nbr_post)

```

## Display Pre and Post Fires

```{r}

nbr_stack <- c(nbr_pre, nbr_post)
names(nbr_stack) <- c("Pre-fire NBR", "Post-fire NBR")
nbr_stack_df <- rasterdf(nbr_stack)

ggplot(nbr_stack_df) +
  geom_raster(aes(x = x, 
                  y = y, 
                  fill = value)) + 
  scale_fill_gradient(name = "NBR", 
                       low = "lightyellow", 
                       high = "darkgreen") +
  coord_sf(expand = FALSE) +
  annotation_scale(location = 'bl') +
  facet_wrap(facets = vars(variable), 
             ncol = 1) +
  theme_void()

```

## Display dNBR

```{r}

dnbr_df <- rasterdf(dnbr)

ggplot(dnbr_df) +
  geom_raster(aes(x = x, 
                  y = y, 
                  fill = value)) + 
  scale_fill_gradient2(name = "DNBR", 
                       low = "blue", 
                       high = "red",
                       midpoint = 0) +
  coord_sf(expand = F) +
  annotation_scale(location = 'bl') +
  theme_void()

```

## Classify Severity

```{r}

# Classifying the index values into a matrix
rclas <- matrix(c(-Inf, -970, NA,  # Missing data
                  -970, -100, 5,   # Increased greenness
                  -100, 80, 1,     # Unburned
                  80, 265, 2,      # Low severity
                  265, 490, 3,     # Moderate severity
                  490, Inf, 4),    # High severity
                ncol = 3, byrow = T)

severity <- classify(dnbr, rclas)

SCcolors = c("darkgreen", 
             "cyan3", 
             "yellow", 
             "red", 
             "green")
SCnames = c("Unburned", 
            "Low", 
            "Moderate", 
            "High", 
            "> Green")
severity_df <- rasterdf(severity)

ggplot(severity_df) +
  geom_raster(aes(x = x, 
                  y = y, 
                  fill = as.character(value))) + 
  scale_fill_manual(name = "Severity Class",
                    values = SCcolors,
                    labels = SCnames,
                    na.translate = FALSE) +
  annotation_scale(location = 'bl') +
  coord_fixed(expand = F) +
  theme_void()

```

```{r}

# Define severity classification matrix
rclas <- matrix(c(-Inf, -970, NA,   # Missing data
                  -970, -100, 5,     # Increased greenness
                  -100, 80, 1,       # Unburned
                  80, 265, 2,        # Low severity
                  265, 490, 3,       # Moderate severity
                  490, Inf, 4),      # High severity
                ncol = 3, byrow = TRUE)

# Color palette 
severity_colors <- c("darkgreen", "darkcyan", "yellow", "red", "green")
severity_names <- c("Unburned", "Low", "Moderate", "High", "> Green")

# Create leaflet map
leaflet() %>%
  addTiles() %>%
  addRasterImage(
    severity, 
    colors = severity_colors,
    opacity = 0.7,
    group = "Severity Classes"
  ) %>%
  addLegend(
    position = "bottomright",
    colors = severity_colors,
    labels = severity_names,
    title = "Severity Class"
  )

```